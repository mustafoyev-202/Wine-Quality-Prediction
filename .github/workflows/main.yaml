name: workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  build-and-push-docker-image:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip

      - name: Build, tag, and push image to Docker Hub
        id: build-image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          IMAGE_NAME: my-app
          IMAGE_TAG: latest
        run: |
          echo "Logging in to Docker Hub"
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker build -t $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG .
          docker push $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG

  Continuous-Deployment:
    needs: build-and-push-docker-image
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Pull latest images
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/my-app:latest

      - name: Run Docker Image to serve users
        run: |
          docker run -d -p 8080:8080 --name=my-app ${{ secrets.DOCKER_USERNAME }}/my-app:latest

      - name: Clean previous images and containers
        run: |
          docker system prune -f
